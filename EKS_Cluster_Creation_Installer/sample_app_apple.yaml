apiVersion: v1
kind: Service
metadata:
  name: appf
spec:
  #type: NodePort
  ports:
    - port: 80
      targetPort: 8080
  selector:
    app: appf
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: appf
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 2
      maxSurge: 2
  selector:
    matchLabels:
      app: appf
  template:
    metadata:
      labels:
        app: appf    
   spec:
     containers:
      - name: apple-app
        image: hashicorp/http-echo
        args:
          - "-text=banana"
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: appf
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "false"
    nginx.ingress.kubernetes.io/rewrite-target: /
    #alb.ingress.kubernetes.io/scheme: internal
    #alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:us-west-2:682651395775:certificate/2bf2988f-7d08-43f4-99d8-51069b2d22f9
  labels:
    app: appf
spec:
  rules:
  - host: a05eaa3bd483611eab26a026aee15004-fdd3afb16e8804f5.elb.us-west-2.amazonaws.com
    http:
      paths:
        - path: /ping
          backend:
            serviceName: appf
            servicePort: 80
---
apiVersion: autoscaling/v2beta1
kind: HorizontalPodAutoscaler
metadata:
  name: appf
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: appf
  minReplicas: 3
  maxReplicas: 6
  metrics:
  - type: Resource
    resource:
      name: cpu
      targetAverageUtilization: 50