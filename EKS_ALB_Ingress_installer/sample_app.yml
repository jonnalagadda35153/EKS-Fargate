apiVersion: v1
kind: Service
metadata:
  name: appf
spec:
  type: NodePort
  ports:
    - port: 80
      targetPort: 8080
  selector:
    app: appf
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: appf
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 2
      maxSurge: 2
  selector:
    matchLabels:
      app: appf
  template:
    metadata:
      labels:
        app: appf
    spec:
      containers:
        - name: appf
          image: dmilan/docker-sample-restapp-flask
          resources:
            requests:
              cpu: 200m
              memory: 0.5Gi
            limits:
              cpu: 400m
              memory: 1Gi
          securityContext:
            privileged: false
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
          ports:
            - containerPort: 8080
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: appf
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internal
    #alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:us-west-2:682651395775:certificate/2bf2988f-7d08-43f4-99d8-51069b2d22f9
  labels:
    app: appf
spec:
  rules:
    - http:
        paths:
          - path: /*
            backend:
              serviceName: appf
              servicePort: 80
---
apiVersion: autoscaling/v2beta1
kind: HorizontalPodAutoscaler
metadata:
  name: appf
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: appf
  minReplicas: 3
  maxReplicas: 6
  metrics:
  - type: Resource
    resource:
      name: cpu
      targetAverageUtilization: 50